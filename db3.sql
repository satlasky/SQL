-- MySQL Script generated by MySQL Workbench
-- Mon Mar 20 11:51:04 2023
-- Model: Online Course    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema programming
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `programming`;
USE `programming`;
-- -----------------------------------------------------
-- Table `programming`.`course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `programming`.`course` (
  `id_course` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` VARCHAR(2000) NOT NULL,
  `price` INT NOT NULL,
  `duration_in_weeks` INT NOT NULL,
  PRIMARY KEY (`id_course`));


-- -----------------------------------------------------
-- Table `programming`.`student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `programming`.`student` (
  `id_student` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  `surname` VARCHAR(30) NOT NULL,
  `email` VARCHAR(30) NOT NULL,
  `phone` VARCHAR(30) NOT NULL,
  `course_id` INT NOT NULL,
  PRIMARY KEY (`id_student`),
  INDEX (`course_id` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`course_id`)
    REFERENCES `programming`.`course` (`id_course`));


-- -----------------------------------------------------
-- Table `programming`.`lesson`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `programming`.`lesson` (
  `id_lesson` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  `description` VARCHAR(2000) NOT NULL,
  `duration_in_minutes` INT NOT NULL,
  `course_id` INT NOT NULL,
  PRIMARY KEY (`id_lesson`),
  INDEX (`course_id` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`course_id`)
    REFERENCES `programming`.`course` (`id_course`));


-- -----------------------------------------------------
-- Table `programming`.`payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `programming`.`payment` (
  `id_payment` INT NOT NULL AUTO_INCREMENT,
  `payment_date` DATE NOT NULL,
  `amount` INT NOT NULL,
  `student_id` INT NOT NULL,
  `course_id` INT NOT NULL,
  PRIMARY KEY (`id_payment`),
  INDEX (`student_id` ASC) VISIBLE,
  INDEX (`course_id` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`student_id`)
    REFERENCES `programming`.`student` (`id_student`),
  CONSTRAINT ``
    FOREIGN KEY (`course_id`)
    REFERENCES `programming`.`course` (`id_course`));


-- -----------------------------------------------------
-- Table `programming`.`certificate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `programming`.`certificate` (
  `id_certificate` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  `date` DATE NOT NULL,
  `student_id` INT NOT NULL,
  `course_id` INT NOT NULL,
  PRIMARY KEY (`id_certificate`),
  INDEX (`student_id` ASC) VISIBLE,
  INDEX (`course_id` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`student_id`)
    REFERENCES `programming`.`student` (`id_student`),
  CONSTRAINT ``
    FOREIGN KEY (`course_id`)
    REFERENCES `programming`.`course` (`id_course`));


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
